pipeline ClimateDataPipeline {

  DataDownloader
  -> ArchiveHandler
  -> DataFilePicker
  -> TextReader
  -> CSVReader
  -> ColumnSelector
  -> ColumnRemover
  -> DataTableInterpreter
  -> TempTransformerA
  -> TempTransformerB
  -> SQLiteSaver;

  constraint ValidIdRange oftype RangeConstraint { lowerBound: 0; lowerBoundInclusive: false; }
  valuetype ValidId oftype integer { constraints: [ValidIdRange]; }

  block DataTableInterpreter oftype TableInterpreter {
    header: false;
    columns: [
      "id" oftype ValidId,
      "producer" oftype text,
      "model" oftype text,
      "month" oftype integer,
      "temperature" oftype decimal,
      "battery_temperature" oftype decimal
    ];
  }

  transform CelsiusToFahrenheit {
    from celsiusTemp oftype decimal;
    to fahrenheitTemp oftype decimal;
    fahrenheitTemp: (celsiusTemp * 9/5) + 32;
  }

  block TempTransformerA oftype TableTransformer {
    inputColumns: ['temperature'];
    outputColumn: 'temperature';
    use: CelsiusToFahrenheit; 
  }

  block TempTransformerB oftype TableTransformer {
    inputColumns: ['battery_temperature'];
    outputColumn: 'battery_temperature';
    use: CelsiusToFahrenheit; 
  }

  block SQLiteSaver oftype SQLiteLoader {
    table: "temperatures";
    file: "./temperatures.sqlite";
    dropTable: false;
  }


  block DataDownloader oftype HttpExtractor {
    url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
  }

  block ArchiveHandler oftype ArchiveInterpreter {
    archiveType: "zip";
  }

  block DataFilePicker oftype FilePicker {
    path: "/data.csv";
  }

  block CSVReader oftype CSVInterpreter {
    delimiter: ';';
  }

  block TextReader oftype TextFileInterpreter {}

  block ColumnRemover oftype ColumnDeleter {
    delete: [column F, column G, column H, column I];
  }

  block ColumnSelector oftype CellRangeSelector {
    select: range A1:K*;
  }

}
